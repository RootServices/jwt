plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

group = 'net.tokensmith'
version = '1.3.1-SNAPSHOT'
description = 'Interface used in Otter Web Framework to help serializing to/from JSON'

sourceCompatibility = 12
targetCompatibility = 12

ext {
    jacksonVersion = '2.9.10'
    log4jVersion = '2.12.1'
    mockitoVersion = '2.28.2'
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    testImplementation group: 'junit', name: 'junit', version:'4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allJava)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from(javadoc.destinationDir)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jwt'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'jwt'
                packaging = 'jar'
                description = 'Java Implementation of JSON Web Tokens'
                url = 'https://github.com/RootServices/jwt'

                scm {
                    connection = 'git@github.com:RootServices/jwt.git'
                    developerConnection = 'git@github.com:RootServices/jwt.git'
                    url = 'https://github.com/RootServices/jwt'
                }

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://github.com/RootServices/jwt/blob/development/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'tmackenzie'
                        name = 'Tom MacKenzie'
                        email = 'tom@tokensmith.net'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            if(!project.ext.properties.containsKey("ossrhUser")) {
                project.ext.ossrhUser = 'wrongUser'
                project.ext.ossrhPassword = 'wrongPassword'
                print "no ossrh user or password"
            }
            credentials {
                username = project.ext.ossrhUser
                password = project.ext.ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

